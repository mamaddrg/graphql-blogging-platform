// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  name        String
  email       String    @unique
  password    String
  bio         String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  posts       Post[]
  comments    Comment[]
  likes       Like[]
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String
  content     String
  published   Boolean   @default(false)
  authorId    Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  author      User      @relation(fields: [authorId], references: [id])
  comments    Comment[]
  likes       Like[]
}

model Comment {
  id          Int       @id @default(autoincrement())
  content     String
  authorId    Int
  postId      Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  author      User      @relation(fields: [authorId], references: [id])
  post        Post      @relation(fields: [postId], references: [id])
}

model Like {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  userId      Int
  postId      Int

  post        Post      @relation(fields: [postId], references: [id])
  user        User      @relation(fields: [userId], references: [id])
  @@unique([userId, postId])
}